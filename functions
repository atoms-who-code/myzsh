clr(){
    clear
    echo "Happy code, "$USER"\n"
    cal
    echo ""
    date
}

copydir(){
    pwd | xclip  -selection clipboard
}

find-g(){
    find / -iname "$@" 2>/dev/null
}

find-l(){
    find ./ -iname "$@" 2>/dev/null
}
find-d(){
    find $1 -iname "$@" 2>/dev/null
}
find-t(){
    find "$@" 2>/dev/null
}

mountrpi(){
    sshfs -o allow_other human@10.42.0.100:/home/human /mnt/rpi4 -o IdentityFile=/home/human/.ssh/rpi4 -p 8908 && cd /mnt/rpi4
    echo "RPI4 Mounted"
}

umountrpi(){
    cd /mnt
    sudo umount /mnt/rpi4
    echo "RPI4 Mounted"
}

mountutm-b(){
    sshfs -o allow_other d_pereda@192.168.64.4:/home/d_pereda /Volumes/utm-ubuntu -o IdentityFile=/Users/d_pereda/.ssh/utm-ubuntu -p 22 && cd /Users/d_pereda/
    echo "RPI4 Mounted"
}

function dock-stop(){
    docker stop $(docker ps -a -q)
}

function dock-clean(){
    docker kill $(docker ps -q)
    docker container prune -f
    docker network prune -f

    if [ "$1" = "all" ]; then
        docker rmi $(docker images -a -q)
    fi
}

git-auth(){
    if [ -n "$1" ]; then
        eval `ssh-agent`
        if  [[ "$1" == "git"  ]]; then
            ssh-add /home/human/.ssh/git
        fi
        if  [[ "$1" == "bit"  ]]; then
            ssh-add /home/human/.ssh/bitbucketbb
        fi
    else
        echo "Provide a git provider to authenticate with"
    fi
}

auth-bit(){
    eval `ssh-agent`
    ssh-add /home/human/.ssh/bitbucketbb
}

filePipes(){
    cat ~/bin/filePipes
}

mount-bbm-client(){
    sshfs -o allow_other ubuntu@34.203.201.101:/home/ubuntu/secure_client_backend /mnt/bbm-client-area -o IdentityFile=/home/human/.ssh/bbm-development.pem -p 22 && cd /mnt/bbm-client-area
}


randPass(){
    if [ -n "$1" ]; then
        </dev/urandom tr -dc '1234567890qwertyuipasdfkzxcvbnm' | head -c$@; echo ""
    else
        </dev/urandom tr -dc '1234567890qwertyuipasdfkzxcvbnm' | head -c20; echo ""
    fi
}

replaceSpaces(){
    for file in *; do mv "$file" `echo $file | tr ' ' '_'` ; done
}

dockTerm(){

}


git-up(){
    echo "\n--------------- add . ---------------";
    git add .;

    if [ -n "$1" ]; then
        echo "\n--------------- git commit -m \"$@\" ---------------";
        git commit -m "$@";
    else
        echo "\n--------------- git commit -m 'Quick Fix' ---------------";
        git commit -m "Quick Fix";
    fi

    echo "\n--------------- git pull ---------------";
    git pull;
    echo "\n--------------- git push ---------------";
    git push;
    echo "\n--------------- git status ---------------";
    git status;
}

function git_branch_name()
{
  branch=$(git symbolic-ref HEAD 2> /dev/null | awk 'BEGIN{FS="/"} {print $NF}')
  if [[ $branch == "" ]];
  then
    :
  else
    echo '- ('$branch')'
  fi
}


copy(){
    cat $@ | pbcopy
}

from-develop(){
    echo "\n--------------- git stash ---------------" &&
    git stash &&
    echo "\n--------------- git checkout develop ---------------" &&
    git checkout develop &&
    echo "\n--------------- git pull ---------------" &&
    git pull &&
    echo "\n--------------- git checkout -f $@ ---------------" &&
    git checkout -f $@ &&
    echo "\n--------------- git pull ---------------" &&
    git pull &&
    echo "\n--------------- git merge develop ---------------" &&
    git merge develop;
}

deploy-version () {
	echo "\n--------------- git fetch ---------------" &&
    git fetch &&
    echo "\n--------------- git checkout -f release/$@ ---------------" &&
    git checkout -f release/$@ &&
    echo "\n--------------- git pull ---------------" &&
    git pull &&
    echo "\n--------------- npm i ---------------" &&
    npm i &&
    echo "\n--------------- composer u ---------------" &&
    composer u &&
    echo "\n--------------- composer i ---------------" &&
    composer i &&
    echo "\n--------------- npm run prod ---------------" &&
    npm run prod &&
    echo "\n--------------- php artisan optimize ---------------" &&
    php artisan optimize &&
    echo "\n--------------- php migrate ---------------" &&
    php artisan migrate
}

deploy-branch(){
    echo "\n--------------- git fetch ---------------" &&
    git fetch &&
    echo "\n--------------- git checkout -f $1 ---------------" &&
    git checkout -f $1 &&
    echo "\n--------------- git pull ---------------" &&
    git pull &&
    echo "\n--------------- npm i ---------------" &&
    npm i &&
    echo "\n--------------- composer u ---------------" &&
    composer u &&
    echo "\n--------------- composer i ---------------" &&
    composer i &&
    echo "\n--------------- npm run prod ---------------" &&
    npm run prod &&

    if [ -n "$2" ]; then
        echo "\n--------------- docker exec -it $2 php artisan optimize ---------------" &&
        docker exec -it $2 php artisan optimize &&
        echo "\n--------------- docker exec -it $2 php artisan migrate ---------------" &&
        docker exec -it $2 php artisan migrate
    else
        echo "\n--------------- php artisan optimize ---------------" &&
        php artisan optimize &&
        echo "\n--------------- php migrate ---------------" &&
        php artisan migrate
    fi
}

release-from-develop(){
    if [ -n "$1" ]; then
        echo "\n--------------- git stash ---------------" &&
        git stash &&
        echo "\n--------------- git stash drop ---------------" &&
        git stash drop &&
        echo "\n--------------- git checkout -f develop ---------------" &&
        git checkout -f develop &&
        echo "\n--------------- git pull ---------------" &&
        git pull &&
        echo "\n--------------- git checkout -b release/$@ ---------------" &&
        git checkout -b release/$@
        echo "\n--------------- git push --set-upstream origin release/$@ ---------------" &&
        git push --set-upstream origin release/$@
    else
        echo "\n A release number is required";
    fi
}
